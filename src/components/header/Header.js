import styles from './Header.module.sass'
import { useSelector, useDispatch } from "react-redux";
import { selectUserAddress, connectUser } from "../../../store/slices/user";
import { AiOutlineMenu, AiOutlineClose } from "react-icons/ai";
import Link from 'next/link';
import { setIsNavCollapsed } from '../../../store/slices/navbar';
import Geo from '../geo/Geo';
import Head from 'next/head';
import { useEffect, useRef } from 'react';
import Tuto from '../tuto/Tuto';
import Overlay from '../overlay/Overlay';
import { next, selectCurrent, setCurrent } from '../../../store/slices/tutos';
import { setWindowScrollTop } from '../../../store/slices/scroll';
import { setAll } from '../../../store/slices/anim';


export default function () {
  const tuto_connect = useRef(null)
  const menuRef = useRef(null)
  const dispatch = useDispatch()
  const address = useSelector(selectUserAddress)
  const currentTuto = useSelector(selectCurrent)

  const links = [
    {
      name: "Marketplace",
      path: "/"
    },
    {
      name: "My NFTs",
      path: "/my-nfts"
    },
    {
      name: "About RECP",
      path: "/about-us"
    },
    {
      name: "Get In Touch",
      path: "/contact#contact"
    }
  ]

  const open = () => {
    dispatch(setIsNavCollapsed({ isNavCollapsed: true }));
    if (currentTuto == 9) {
      dispatch(setCurrent(0))
      dispatch(setAll(true))
    }
  }

  const getTutoConnect = () => {
    return tuto_connect
  }

  useEffect(() => {
    if (currentTuto == 4)
      if (address)
        dispatch(next())
  }, [address])

  return (            
    <div className={`${styles.header} header`}>
      <Head>
        <title>SmartProperty</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Overlay />
      <Tuto
        id={4}
        msg="Start by connecting your wallet"
        offset={{
          x: tuto_connect?.current?.getBoundingClientRect().width * -1 + 30,
          y: tuto_connect?.current?.getBoundingClientRect().height + 10,
        }}
        getTarget={getTutoConnect}
        navigation={false}
      />
      <Tuto
        id={9}
        msg="Once the transaction is complete, you will find your NFT in the My NFTs section."
        getTarget={() => menuRef}
        offset={{
          x: 0,
          y: 40
        }}
        navigation={false}
      >
        <button
          className="btn"
          style={{ transform: 'scale(.8)' }} 
          onClick={() => { dispatch(setCurrent(0)) }}
        >
          FINISH
        </button>
      </Tuto>
      <Geo
        src="/img/geos/geo_2.png"
        pos={{
          x: "30%",
          y: "0"
        }}
        size={{
          w: "100%",
          h: "200%",
        }}
      />
      <div className={`${styles.top} top`}>
        <div className={styles.navbar}>
          <button className="btn" onClick={open} ref={menuRef}>
            <AiOutlineMenu />
          </button>
        </div>
        <div className={styles.connect} ref={tuto_connect}>
          {!address && (
            <button className="btn" onClick={() => { dispatch(connectUser()) }}>CONNECT WALLET</button>
          )}
          {address !== '' &&
            <div className={styles.info}>
              <p><span>connected as<br /></span>{address.slice(0, 15)}...</p>
            </div>
          }
        </div>
      </div>
      <div className={`${styles.title} title`}>
        <h1>
          <Link href="/">
            RECP<br />
          </Link>
          <Link href="/">
            <span>Marketplace</span>
          </Link>
        </h1>
      </div>
      <div className="line"></div>
    </div>
  )
}