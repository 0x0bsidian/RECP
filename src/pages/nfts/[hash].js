import { LineChart } from '@/components/lineChart/LineChart';
import styles from '../../styles/pages/nft.module.sass';
import InvestModal from '@/components/investModal/InvestModal';
import { useRef, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { selectUserAddress } from '../../../store/slices/user';
import Tuto from '@/components/tuto/Tuto';
import { next, selectCurrent } from '../../../store/slices/tutos';

const ethusd = 2080;

export default function ({ nft }) {
  const [nftcpy, setNftcpy] = useState({})
  const buyRef = useRef(null)

  const dispatch = useDispatch()
  const address = useSelector(selectUserAddress)
  const current = useSelector(selectCurrent)

  const invest = () => {
    setNftcpy(nft)
    if (current == 7)
      dispatch(next())
  }

  return (
    <div className={styles.nft}>
      <Tuto
        id={6}
        navigation={false}
        msg="On this page, you'll find various information generated by different APIs."
        center
      >
        <button
          className="btn"
          style={{ transform: 'scale(.8)' }} 
          onClick={() => { dispatch(next()) }}
        >
          CONTINUE
        </button>
      </Tuto>
      <Tuto
        id={7}
        navigation={false}
        msg="If you are on the Sepolia testnet you can proceed and click on the buy button."
        getTarget={() => buyRef}
        offset={{
          x: 0,
          y: 50
        }}
      />
      <div className={styles.main}>
        <div className={styles.img}>
          <h2>{nft.name}</h2>
          <img src={nft.src} alt="nft image" />
          <div className={styles.price}>
            {
              (!address || (address && address != nft.owner)) ?
                <button ref={buyRef} className="btn" onClick={invest}>BUY</button>
              :
                <p>(OWNED)</p>
            }
            <div>
              <p>{nft.price} ETH</p>
              <p>{nft.price * ethusd} USD</p>
            </div>
          </div>
        </div>
        <div className={styles.summary}>
          <h3>Summary</h3>
          <div>
            <div>
              <p><span>Rentability :</span> xxxx xxxx</p>
              <p><span>Price :</span> {nft.price * ethusd} USD</p>
              <p><span>Price/m² :</span> {(nft.perm2).toFixed(2)} USD/m²</p>
              <p><span>Market share :</span> xxxx xxxx</p>
            </div>
            <div>
              <p><span>Owned by</span> ({nft.owner.slice(0, 15)}...)</p>
              <p>Previous selling prices of similar items</p>
              <ul>
                <li>xx ETH --- tx --- wallet</li>
                <li>xx ETH --- tx --- wallet</li>
                <li>xx ETH --- tx --- wallet</li>
              </ul>
            </div>
          </div>
        </div>
        <div className={styles.desc}>
          <h3>Description and Attributes</h3>
          <div>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos quae aliquam qui facilis vero cum ducimus deserunt ullam nesciunt praesentium, aperiam quo ea, molestiae iusto accusantium exercitationem totam reprehenderit. Illum.</p>
          </div>
        </div>
        <div className={styles.history}>
          <h3>Price History</h3>
          <div >
            <LineChart />
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis, enim. Suscipit itaque voluptatum labore quam id, harum earum odit nobis optio temporibus necessitatibus sit beatae a unde incidunt sed odio.</p>
          </div>
        </div>
      </div>
      <InvestModal nft={nftcpy} setNft={setNftcpy} />
    </div>
  )
}

export async function getServerSideProps({ params }) {
  const { nfts } = await import("/data/nfts.json")

  return {
    props: {
      nft: nfts.find((nft) => nft.id == params.hash)
    },
  }
}